/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.view.screens.create;

import br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.controller.*;
import br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.factory.SessionStorageSingleton;
import br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.model.DataResponseModel;
import br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.model.entities.*;
import br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.utils.ComboBoxItem;
import br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.utils.DefaultMessages;
import br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.utils.Validators;
import br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.view.screens.template.FrMain;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Objects;

/**
 *
 * @author misael
 */
public class CreateModeloImpressoraScreen extends javax.swing.JDialog {
    private final ModeloImpressoraController modeloImpressoraController = new ModeloImpressoraController();


    private MarcaController marcaController = new MarcaController();
    private TaxaController taxaController = new TaxaController();
    private TipoImpressoraController tipoImpressoraController = new TipoImpressoraController();

    private List<Marca> marcasLista = new ArrayList<>();
    private List<Taxa> taxaLista = new ArrayList<>();
    private List<TipoImpressora> tipoImpressoraLista = new ArrayList<>();

    /**
     * Creates new form CreateImpressoraScreen
     */
    public CreateModeloImpressoraScreen(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.buscarMarca();
        this.buscarTaxa();
        this.buscarTipoImpressora();
        this.iniciarComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jcbMarcaImpressora = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txNmModelo = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        jcbInDisponivel = new javax.swing.JCheckBox();
        jcbTipoModeloImpressora = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jcbTaxa = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jLabel1.setText("MODELO IMPRESSORA");

        jcbMarcaImpressora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbMarcaImpressoraActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel2.setText("Marca: ");

        jLabel4.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel4.setText("Nome Modelo:");

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnVoltar.setText("Cancelar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        jcbInDisponivel.setText("Modelo Impressora disponivel?");
        jcbInDisponivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbInDisponivelActionPerformed(evt);
            }
        });

        jcbTipoModeloImpressora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTipoModeloImpressoraActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel6.setText("Tipo Impressora: ");

        jcbTaxa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTaxaActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel7.setText("TAXA: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jcbMarcaImpressora, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jcbTipoModeloImpressora, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbTaxa, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbInDisponivel))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(44, 44, 44)
                        .addComponent(txNmModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 463, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbMarcaImpressora, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jcbTaxa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbTipoModeloImpressora, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jcbInDisponivel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txNmModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 171, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(42, 42, 42)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        HashMap<String,String> dados = this.pegarDadosPreenchidos();
        DataResponseModel<ModeloImpressora> resp = this.modeloImpressoraController.save(dados);
        FrMain.exibirPopUp(resp.getMessage());
        if(resp.isSuccess()) {
            this.dispose();
        }

    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        HashMap<String, String> dados = this.pegarDadosPreenchidos();
        SessionStorageSingleton.set("cadastroModeloImpressora", dados);
        this.modeloImpressoraController.save(dados);
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void jcbInDisponivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbInDisponivelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbInDisponivelActionPerformed

    private void jcbMarcaImpressoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbMarcaImpressoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbMarcaImpressoraActionPerformed

    private void jcbTipoModeloImpressoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTipoModeloImpressoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbTipoModeloImpressoraActionPerformed

    private void jcbTaxaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTaxaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbTaxaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateModeloImpressoraScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateModeloImpressoraScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateModeloImpressoraScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateModeloImpressoraScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CreateModeloImpressoraScreen dialog = new CreateModeloImpressoraScreen(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }


    private void buscarMarca(){
        DataResponseModel<List<Marca>> resp = this.marcaController.findActiveOnly();
        if(!resp.isSuccess()){
            FrMain.exibirPopUp(resp.getMessage());
            this.dispose();
            return;
        }
        this.marcasLista = resp.getData();
    }

    private void buscarTipoImpressora(){
        DataResponseModel<List<TipoImpressora>> resp = this.tipoImpressoraController.findActiveOnly();
        if(!resp.isSuccess()){
            FrMain.exibirPopUp(resp.getMessage());
            this.dispose();
            return;
        }
        this.tipoImpressoraLista = resp.getData();
    }

    private void buscarTaxa(){
        DataResponseModel<List<Taxa>> resp = this.taxaController.findActivesOnly();
        if(!resp.isSuccess()){
            FrMain.exibirPopUp(resp.getMessage());
            this.dispose();
            return;
        }
        this.taxaLista = resp.getData();
    }

    private void iniciarComboBox(){
        if(!(Validators.isListaValida(this.marcasLista) || Validators.isListaValida(this.taxaLista) || Validators.isListaValida(this.tipoImpressoraLista))) {
            FrMain.exibirPopUp(DefaultMessages.ERRO_DADOS_NAO_ENCOTRADO.getMessage());
            this.dispose();
            return;
        }

        for (int i=0; i<this.marcasLista.size(); i++){
            Marca marca = this.marcasLista.get(i);
            this.jcbMarcaImpressora.addItem(new ComboBoxItem(i,String.valueOf(marca.getId()), marca.getNmMarca()));
        }

        for (int i=0; i<this.taxaLista.size(); i++){
            Taxa taxa = this.taxaLista.get(i);
            this.jcbTaxa.addItem(new ComboBoxItem(i,String.valueOf(taxa.getId()), taxa.getTipoTaxa().getNmTipoTaxa()));
        }

        for (int i=0; i<this.tipoImpressoraLista.size(); i++){
            TipoImpressora tpImp = this.tipoImpressoraLista.get(i);
            this.jcbTipoModeloImpressora.addItem(new ComboBoxItem(i,String.valueOf(tpImp.getId()), tpImp.getNmTipoImpressora()));
        }


    }


    private HashMap<String,String> pegarDadosPreenchidos(){
        HashMap<String,String> map = new HashMap<>();

        ComboBoxItem taxa = (ComboBoxItem)this.jcbTaxa.getSelectedItem();
        if(taxa != null) {
            map.put("idTaxa", String.valueOf(taxa.getId()));
        }
        ComboBoxItem marca = (ComboBoxItem)this.jcbTaxa.getSelectedItem();
        if(marca != null) {
            map.put("idMarca", String.valueOf(marca.getId()));
        }
        ComboBoxItem tpImp = (ComboBoxItem)this.jcbTipoModeloImpressora.getSelectedItem();
        if(tpImp != null) {
            map.put("idTipoImpressora", String.valueOf(tpImp.getId()));
        }

        map.put("inImpressoraDisponivel", String.valueOf(this.jcbInDisponivel.isSelected()));
        map.put("nmModeloImpressopra", String.valueOf(this.txNmModelo.getText()));
        map.put("nmUsuario", SessionStorageSingleton.get("nmUsuario").toString());

        return map;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JCheckBox jcbInDisponivel;
    private javax.swing.JComboBox<ComboBoxItem> jcbMarcaImpressora;
    private javax.swing.JComboBox<ComboBoxItem> jcbTaxa;
    private javax.swing.JComboBox<ComboBoxItem> jcbTipoModeloImpressora;
    private javax.swing.JTextField txNmModelo;
    // End of variables declaration//GEN-END:variables
}
