/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.view.screens.modify;

import br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.controller.ClienteController;
import br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.controller.GrupoImpressoraController;
import br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.controller.ModeloImpressoraController;
import br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.factory.MaskFormatterFabric;
import br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.model.DataResponseModel;
import br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.model.entities.*;
import br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.utils.ComboBoxItem;
import br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.utils.DefaultMessages;
import br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.utils.Formatadores;
import br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.utils.Validators;
import br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.view.components.GrupoImpressoraCard;
import br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.view.components.ModeloImpressoraCard;
import br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.view.screens.create.CreateCotacaoScreen;
import br.edu.lps.misael_otavio.sistema_gerenciamento_aluguel_impressoras.view.screens.template.FrMain;
import lombok.Data;
import lombok.extern.java.Log;

import javax.swing.*;
import javax.swing.text.MaskFormatter;
import java.awt.*;
import java.awt.event.*;
import java.text.ParseException;
import java.util.HashMap;
import java.util.List;
import java.util.Objects;

/**
 *
 * @author misael
 */
public class ModifyGrupoImpressoraScreen extends javax.swing.JDialog {
    private final ModeloImpressoraController modeloImpressoraController = new ModeloImpressoraController();
    private final GrupoImpressoraController grupoImpressoraController = new GrupoImpressoraController();
    private GrupoImpressora grupoImpressora;
    private ModeloImpressora modeloSelecionado;
    private List<ModeloImpressora> modeloImpressoraLista;

    private final HashMap<ModeloImpressora,Integer> modeloQuantiade = new HashMap<>();


    private JPanel contentPanel;
    private JScrollPane jspListaDados;

    private HashMap<String,Boolean> checkList;
    /**
     * Creates new form ModifyImpressoraScreen
     */
    public ModifyGrupoImpressoraScreen(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public ModifyGrupoImpressoraScreen(java.awt.Frame parent, boolean modal, GrupoImpressora gpImp, HashMap<String,Boolean> checklist) {
        super(parent, modal);
        initComponents();
        this.grupoImpressora = gpImp;
        this.checkList = checklist;
        this.buscarModeloImpressora();
        this.iniciarComboBox();
        this.atualizarValor();
        this.montarMascara();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        nmGpImpressora = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnAddModeloImpressora = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jlCustoModelo = new javax.swing.JLabel();
        txQuantidadeDesejada = new javax.swing.JFormattedTextField();
        jcbModeloImpressora = new javax.swing.JComboBox<>();
        jpBody = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        nmGpImpressora.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        nmGpImpressora.setText("gpName");

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        btnSalvar.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jLabel6.setText("GRUPO: ");

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel1.setText("Modelo Impressoras:");

        btnAddModeloImpressora.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        btnAddModeloImpressora.setText("ADICIONAR");
        btnAddModeloImpressora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddModeloImpressoraActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel2.setText("Quantidade:");

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel3.setText("Custo mensal do modelo:");

        jlCustoModelo.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jlCustoModelo.setText("Custo");

        txQuantidadeDesejada.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N

        jcbModeloImpressora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbModeloImpressoraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBodyLayout = new javax.swing.GroupLayout(jpBody);
        jpBody.setLayout(jpBodyLayout);
        jpBodyLayout.setHorizontalGroup(
            jpBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jpBodyLayout.setVerticalGroup(
            jpBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 172, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(nmGpImpressora, javax.swing.GroupLayout.PREFERRED_SIZE, 669, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(78, 78, 78)
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnAddModeloImpressora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txQuantidadeDesejada)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(jcbModeloImpressora, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlCustoModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(141, 141, 141))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jpBody, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(141, 141, 141))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nmGpImpressora)
                    .addComponent(jLabel6))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jlCustoModelo)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbModeloImpressora, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txQuantidadeDesejada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddModeloImpressora, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jpBody, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(117, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 938, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(99, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnAddModeloImpressoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddModeloImpressoraActionPerformed
        String qt = Validators.apenasDigitos(txQuantidadeDesejada.getText());
        if(qt.isEmpty()){
            return;
        }
        int quantidade = Integer.parseInt(qt);

        if(quantidade < 1 || quantidade > this.modeloSelecionado.getQtImpressoraDisponivel() ){
                FrMain.exibirPopUp("Quantidade indisponivel");
                return;
        }
        this.modeloQuantiade.put(this.modeloSelecionado, quantidade);
        this.atualizarListaSelecionados();

    }//GEN-LAST:event_btnAddModeloImpressoraActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if(this.modeloQuantiade.isEmpty()){
            FrMain.exibirPopUp("Nenhum modelo e quantidade selecionados");
            return;
        }

        DataResponseModel<GrupoImpressora> resp =  this.grupoImpressoraController.adicionarImpressoras(this.grupoImpressora.getId(),modeloQuantiade);
        FrMain.exibirPopUp(resp.getMessage());
        if(resp.isSuccess()) {
            this.dispose();
            this.checkList.put("impressoras",true);
        }

    }//GEN-LAST:event_btnSalvarActionPerformed

    private void jcbModeloImpressoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbModeloImpressoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbModeloImpressoraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModifyGrupoImpressoraScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModifyGrupoImpressoraScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModifyGrupoImpressoraScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModifyGrupoImpressoraScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ModifyGrupoImpressoraScreen dialog = new ModifyGrupoImpressoraScreen(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }


    private void montarMascara()  {
        try{
            MaskFormatter mascara = MaskFormatterFabric.getMaskFormatter("#######");
            mascara.setPlaceholderCharacter(' ');
            mascara.install(this.txQuantidadeDesejada);
        }catch (ParseException ignored){
        }
    }

    private void buscarModeloImpressora(){
        DataResponseModel<List<ModeloImpressora>> resp = this.modeloImpressoraController.findActivesOnly();
        if(!resp.isSuccess()){
            FrMain.exibirPopUp(resp.getMessage());
        }
        this.modeloImpressoraLista = resp.getData();
    }
    private void iniciarComboBox(){
        if(!Validators.isListaValida(this.modeloImpressoraLista)) {
            FrMain.exibirPopUp(DefaultMessages.ERRO_DADOS_NAO_ENCOTRADO.getMessage());
            this.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowActivated(WindowEvent e) {
                    dispose();
                }
            });
        }
        for (int i = 0; i < this.modeloImpressoraLista.size(); i++) {
            ModeloImpressora modeloImpressora = this.modeloImpressoraLista.get(i);
            this.jcbModeloImpressora.addItem(new ComboBoxItem(
                    i,
                    String.valueOf(modeloImpressora.getId()),
                    String.format("%d- %s: %s",
                            modeloImpressora.getId(),
                            modeloImpressora.getMarcaImpressora().getNmMarca(),
                            modeloImpressora.getNmModeloImpressora()
                    )
            ));
        }
        this.modeloSelecionado = this.modeloImpressoraLista.get(0);

        jcbModeloImpressora.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                ComboBoxItem selecionado = (ComboBoxItem) jcbModeloImpressora.getSelectedItem();
                if(selecionado != null) {
                    modeloSelecionado = modeloImpressoraLista.get(selecionado.getIndex());
                    atualizarValor();
                    txQuantidadeDesejada.setText(String.valueOf(modeloQuantiade.getOrDefault(modeloSelecionado,0)));
                }
            }
        });
    }

    private void atualizarListaSelecionados() {
        this.jpBody.removeAll();

        this.contentPanel = new JPanel();
        this.contentPanel.setLayout(new GridLayout(0, 4));
        this.jpBody.setLayout(new BoxLayout(jpBody, BoxLayout.Y_AXIS));

        this.modeloQuantiade.forEach((key, value) -> {
            ModeloImpressoraCard card = new ModeloImpressoraCard(key,value);

            card.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    super.mouseClicked(e);
                    modeloQuantiade.remove(key);
                    atualizarListaSelecionados();
                }
            });
            this.contentPanel.add(card);
        });

        this.jspListaDados = new JScrollPane(this.contentPanel);
        this.jspListaDados.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        this.jpBody.add(this.jspListaDados);
        this.revalidate();
        this.repaint();
    }

    private void atualizarValor(){
        this.jlCustoModelo.setText(Formatadores.formatMoney(this.modeloSelecionado.getTaxa().getVlTaxa()));
        //this.jlCustoModelo.revalidate();
        //this.jlCustoModelo.repaint();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddModeloImpressora;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<ComboBoxItem> jcbModeloImpressora;
    private javax.swing.JLabel jlCustoModelo;
    private javax.swing.JPanel jpBody;
    private javax.swing.JLabel nmGpImpressora;
    private javax.swing.JFormattedTextField txQuantidadeDesejada;
    // End of variables declaration//GEN-END:variables
}
